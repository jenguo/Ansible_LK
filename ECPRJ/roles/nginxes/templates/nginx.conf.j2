
user              nginx;
worker_processes  {{ worker_processes }};
{% if num_cpus == 2 %}
   worker_cpu_affinity 01 10;
{% elif num_cpus == 4 %}
   worker_cpu_affinity 0001 0010 0100 1000;
{% elif num_cpus >= 4 %}
   worker_cpu_affinity 0000001 00000010  00000100 00001000 00010000 00100000
01000000 10000000;
{% else %}
   worker_cpu_affinity 0001 0010 0100 1000;
{% endif %}


error_log  /var/log/nginx/error.log  info;
worker_rlimit_nofile {{ max_open_file }};

pid        /var/run/nginx.pid;

dso {
#     load ngx_http_lua_module.so;
      load ngx_http_rewrite_module.so;
      load ngx_http_access_module.so;
      load ngx_http_upstream_ip_hash_module.so;
}

events {
    multi_accept on;
    use epoll;
    worker_connections  65535;
}





http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    server_tokens off;
    sendfile on;
    tcp_nopush on;



    #keepalive_timeout  0;
     keepalive_timeout  65;

    gzip on;
    gzip_min_length  1k;
    gzip_buffers     4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_types       text/plain application/x-javascript text/css application/xml;
    gzip_vary on;

    open_file_cache max=100000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    client_max_body_size 300m;
    client_body_buffer_size 128k;

    proxy_connect_timeout 600;
    proxy_read_timeout 600;
    proxy_send_timeout 600;

    proxy_buffer_size 16k;
    proxy_buffers 4 32k;

    proxy_temp_file_write_size 64k;


   proxy_cache_path  {{ngx_cache_dir}}  levels=1:2   keys_zone=appservers:1024m max_size=2048m;

#    upstream appservers {
#        ip_hash;

       # check interval=3000 rise=2 fall=5 timeout=1000 type=http;
       # check_keepalive_requests 100;
       # check_http_send "HEAD / HTTP/1.0\r\n\r\n";
      # check_http_expect_alive http_2xx http_3xx;

#    }



  include vhosts/*.conf;

}



